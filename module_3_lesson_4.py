"""
Объявите функцию single_root_words и напишите в ней параметры root_word и *other_words.
Создайте внутри функции пустой список same_words, который пополнится нужными словами.
При помощи цикла for переберите предполагаемо подходящие слова.
Пропишите корректное относительно задачи условие, при котором добавляются слова в результирующий список same_words.
После цикла верните образованный функцией список same_words.
Вызовите функцию single_root_words и выведете на экран(консоль) возвращённое ей значение.

"""

# Определяем функцию поиска вхождения заданной строки в слово,
# а также вхождения слова в заданную строку.
# В качестве аргумента принимаем ключевое слово и неограниченное количество слов для обработки.
def single_root_words (root_word,  *other_words):

    # Определяем пустой список для записи результатов
    same_words = []

    # последовательно перебираем принятый кортеж со словами
    for maybe_root in range(len(other_words)):

        # Сравниваем после приведения к одному регистру.
        # Если ключевое слово находится в проверяемом
        # или проверяемое входит в ключевое.

        if (root_word.lower() in other_words[maybe_root].lower()
            or other_words[maybe_root].lower() in root_word.lower()):

            # Тогда добавляем это слово в результирующий список.
            same_words.append(other_words[maybe_root])

    # Возвращаем результат.
    return same_words

# Вызываем функцию с контрольными значениями
result1 = single_root_words('rich', 'richiest', 'orichalcum', 'cheers', 'richies')
result2 = single_root_words('Disablement', 'Able', 'Mable', 'Disable', 'Bagel')

# Выводим полученный результат.
print(result1)
print(result2)