"""
Напишите функцию get_multiplied_digits и параметр number в ней.
Создайте переменную str_number и запишите строковое представление(str) числа number в неё.
Основной задачей будет отделение первой цифры в числе: создайте переменную first и запишите в неё первый символ из str_number в числовом представлении(int).
Возвращайте значение first * get_multiplied_digits(int(str_number[1:])). Таким образом вы умножите первую цифру числа на результат работы этой же функции с числом, но уже без первой цифры.
4 пункт можно выполнить только тогда, когда длина str_number больше 1, т.к. в противном случае не получиться взять срез str_number[1:].
Если же длина str_number не больше 1, тогда вернуть оставшуюся цифру first.

"""
# Рекурсивная функция.
def recurse(work_string):

    # Определяет длину строки. Если она не нулевая, то обрабатывает её.
    if len(work_string) >= 1:

        # Первый символ строки переводит в число.
        first = int(work_string[0])

        # Рекурсивно вычисляет произведение числа на оставшиеся в строке значения.
        return first * recurse(work_string[1:])

    # Если строка пустая, то возвращает значение 1.
    # При умножении на 1 произведение не меняется.
    # Не отсылает на дальнейшую рекурсию.
    else:
        return 1

# Функция переводит число в строку и попутно выбрасывает все нули.
# После отдаёт получившуюся строку на обработку другой рекурсивной функции.
def get_multiplied_digits(number):
    str_number = str(number).replace('0','')

    result_recurse = recurse(str_number)

    return result_recurse

# Объявим переменную в которую запишем результат обработки функцией числа
result = get_multiplied_digits(40203)

# Выведем получившийся результат.
print(result)